{"ast":null,"code":"var _jsxFileName = \"/Users/jennayeo/Desktop/hanghae/Nextjs/NodeBird/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector } from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Home = function Home() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts; // 위처럼 구조분해하지않고 mainPosts = ... state.post.mainPosts 처럼 해도됨\n\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 28\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 38\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Home, \"yViitBsbbl69mW3t/o7jzus6gBQ=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jennayeo/Desktop/hanghae/Nextjs/NodeBird/pages/index.js"],"names":["AppLayout","useSelector","PostForm","PostCard","Home","state","user","isLoggedIn","post","mainPosts","map","id"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,qBAAuBH,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQC,UAAR,gBAAQA,UAAR;;AACA,sBAAsBN,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQC,SAAR,iBAAQA,SAAR,CAFe,CAGf;;;AAEA,sBACI,QAAC,SAAD;AAAA,eACKF,UAAU,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADnB,EAEKE,SAAS,CAACC,GAAV,CAAc,UAACF,IAAD;AAAA,0BAAU,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,eAAV;AAAA,KAAd,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CAZD;;GAAMP,I;UACqBH,W,EACDA,W;;;KAFpBG,I;AAcN,eAAeA,IAAf","sourcesContent":["import AppLayout from \"../components/AppLayout\";\n\nimport {useSelector} from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\n\nconst Home = () => {\n    const { isLoggedIn } = useSelector((state) => state.user);\n    const { mainPosts } = useSelector((state) => state.post);\n    // 위처럼 구조분해하지않고 mainPosts = ... state.post.mainPosts 처럼 해도됨\n\n    return (\n        <AppLayout>\n            {isLoggedIn && <PostForm />}\n            {mainPosts.map((post) => <PostCard key={post.id} post={post}/>)}\n            {/* map사용시 key를 넣어주어야하는데 반복문이 바뀐다싶을때는 index는 넣으면 안됨(안티패턴)             */}\n        </AppLayout>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}