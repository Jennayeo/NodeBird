{"ast":null,"code":"var _jsxFileName = \"/Users/jennayeo/Desktop/hanghae/Nextjs/NodeBird/components/PostCard.js\";\nimport React, { useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  // const { me } = useSelector((state) => state.user);\n  // const id = me?.id;\n  // 또는 한방에\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //옵셔널체이닝\n  // 서버 통신 전 state로 대체\n\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev); // false는 true로 바꿔줌 vice versa\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(Card //antd 기능\n    , {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"\",\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          header: `${post.Comments.length}개의 댓글`,\n          itemLayout: \"horizontal\",\n          dataSource: post.Comments,\n          renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 45\n              }, this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), \"\\uB313\\uAE00 \\uBD80\\uBD84\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/jennayeo/Desktop/hanghae/Nextjs/NodeBird/components/PostCard.js"],"names":["React","useState","useCallback","useSelector","PropTypes","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","PostImages","CommentForm","PostCardContent","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport {useSelector} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined,HeartOutlined,MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\n\nconst PostCard = ({ post }) => {\n    // const { me } = useSelector((state) => state.user);\n    // const id = me?.id;\n    // 또는 한방에\n    const id = useSelector((state) => state.user.me?.id); //옵셔널체이닝\n\n    // 서버 통신 전 state로 대체\n    const [liked, setLiked] = useState(false);\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n    const onToggleLike = useCallback(() => {\n        setLiked((prev) => !prev); // false는 true로 바꿔줌 vice versa\n    }, []);\n    const onToggleComment = useCallback(() => {\n        setCommentFormOpened((prev) => !prev)\n    })\n\n    return (\n        <div style={{ marginBottom: 20 }}>\n            <Card\n            //antd 기능\n                cover={post.Images[0] && <PostImages images={post.Images} />}\n                actions={[\n                    <RetweetOutlined key=\"retweet\" />,\n                    liked?\n                        <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />:\n                        <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {id && post.User.id === id\n                            ? (\n                                <>\n                                    <Button>수정</Button>\n                                    <Button type=\"danger\">삭제</Button>\n                                </>\n                            ) :\n                            <Button type=\"\">신고</Button>\n                    }\n                        </Button.Group>\n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>,\n                ]}\n            >\n                <Card.Meta\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={<PostCardContent postData={post.content} />}\n                />\n                {commentFormOpened && (\n                <div>\n                    <CommentForm post={post} />\n                    {/* 댓글은 게시글에 포함되어있으니 게시글에대한 정보가 필요하므로 post넘겨줌 */}\n                    <List \n                        header={`${post.Comments.length}개의 댓글`}\n                        itemLayout=\"horizontal\"\n                        dataSource={post.Comments}\n                        renderItem={(item) => (\n                            <li>\n                                <Comment\n                                    author={item.User.nickname}\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                                    content={item.content}\n                                />\n                            </li>\n                        )}\n                        />\n                    댓글 부분\n                </div>)}\n                {/* <Image /> */}\n                {/* <Content /> */}\n            </Card>\n            {/* <CommentForm />\n            <Comments /> */}\n        </div>\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createdAt: PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n};\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}